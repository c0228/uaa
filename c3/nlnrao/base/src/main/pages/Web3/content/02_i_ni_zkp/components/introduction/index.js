import React from "react";
import OrderList from "@MainComponents/order-list/index.js";

const Introduction = () =>{
 return (<div>
  <div className="mtop15p lh36p" style={{ fontSize:'16px' }}>
    <i>
    <div>Zero-Knowledge Proofs (ZKPs) are cryptographic methods where one party (the prover) proves to another 
        party (the verifier) that a statement is true without revealing any information beyond the truth of 
        the statement.</div><br/>
    &emsp;<u>Interactive ZKPs are like a conversation</u>, while <u>non-interactive ZKPs are 
  like a one-way message</u>. Interactive ZKPs are suitable when you need a dynamic exchange to establish trust 
  or prove knowledge without revealing specific details. Non-interactive ZKPs are ideal when you want to provide 
  a reusable proof that can be verified by anyone independently, making them more efficient for widespread 
  use cases.</i></div>

  <div align="center" className="mtop15p"><h4 className="lh36p"><b>Interactive ZKP</b></h4></div>
  <div className="mtop15p lh25p"><b>Definition:</b> Interactive ZKPs involve a back-and-forth communication between the 
  prover and the verifier. The proof process is executed through multiple rounds of interaction.</div>
  <div className="mtop15p lh25p"><b>How It Works:</b>
  <OrderList data={[(<div className="lh25p">The verifier challenges the prover by issuing specific questions or challenges.</div>),
    (<div className="lh25p">The prover responds with answers that satisfy the verifier's challenges.</div>),
    (<div className="lh25p">After several rounds of this, the verifier is convinced of the statement's validity.</div>)]} />
  </div>
  <div className="mtop15p lh25p"><b>Example Protocol:</b><br/> <i>Sigma Protocol</i></div>
  <OrderList data={[(<div className="lh25p">Used in cryptographic systems where a challenge-response mechanism is essential.</div>),
        (<div className="lh25p">E.g., Proving knowledge of a discrete logarithm in a group without revealing it.</div>)]} />
  <div className="lh25p"><b>Use Case:</b> Authentication systems where live interaction is feasible, such as 
  proving identity in real-time.</div>


  <div align="center" className="mtop15p"><h4 className="lh36p"><b>Non-Interactive ZKP</b></h4></div>
  <div className="mtop15p lh25p"><b>Definition:</b> Non-Interactive ZKPs remove the need for interaction. A single 
  proof is generated by the prover and sent to the verifier, who can independently verify it.</div>
  <div className="mtop15p lh25p"><b>How It Works:</b>
  <OrderList data={[(<div className="lh25p">Both parties rely on a shared reference string (SRS) or some setup phase.</div>),
            (<div className="lh25p">The prover creates the proof once and sends it to the verifier.</div>),
            (<div className="lh25p">The verifier uses the proof and the SRS to validate the claim without further communication.</div>)]} />
  </div>
  <div className="mtop15p lh25p"><b>Example Protocol:</b><br/> 
    <i>zk-SNARKs (Zero-Knowledge Succinct Non-Interactive Arguments of Knowledge)</i> and <i>zk-STARKs (Zero-Knowledge 
        Scalable Transparent Arguments of Knowledge)</i></div>
  <OrderList data={[(<div className="lh25p">Widely used in blockchain applications for privacy-preserving transactions, e.g., Zcash, Ethereum</div>),
    (<div className="lh25p">zk-SNARKs, zk-STARKs fall into the non-interactive ZKP category because they involve a single, static proof that can be verified 
        without interaction between the prover and verifier. This makes them highly suitable for blockchain systems and other 
        decentralized environments where interaction is impractical.</div>)]} />
  <div className="lh25p"><b>Use Case:</b> Scenarios where interaction is impractical, such as verifying smart contract 
  logic or blockchain privacy.</div>

  <div align="center" className="mtop15p"><h4 className="lh36p"><b>Key Differences</b></h4></div>
  <div className="table-responsive">
    <table className="table">
    <thead>
        <tr>
          <th><b>Aspect</b></th>
          <th><b>Interactive ZKP</b></th>
          <th><b>Non-Interactive ZKP</b></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><b>Interaction</b></td>
          <td>Requires multiple back-and-forth rounds</td>
          <td>No interaction needed after proof creation</td>
        </tr>
        <tr>
          <td><b>Verifier's Role</b></td>
          <td>Actively challenges the prover</td>
          <td>Passively verifies a proof</td>
        </tr>
        <tr>
          <td><b>Setup</b></td>
          <td>No pre-shared setup required</td>
          <td>May require a Shared Reference String (SRS)</td>
        </tr>
        <tr>
          <td><b>Proof Size</b></td>
          <td>Typically smaller but dependent on interaction</td>
          <td>Can be compact, like zk-SNARKs, zk-STARKs</td>
        </tr>
        <tr>
          <td><b>Use Cases</b></td>
          <td>Live authentication systems</td>
          <td>Blockchain, privacy-preserving systems</td>
        </tr>
      </tbody>
    </table>
  </div>

 </div>);
};

export default Introduction;